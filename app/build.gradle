/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:33.0.0-jre'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.luaj:luaj-jse:3.0.1'
}

application {
    // Define the main class for the application.
    mainClass = 'com.justaddhippopotamus.ghr.App'
}


shadowJar {
    //minimize()
    mergeServiceFiles()
    zip64 = true
}

compileJava {
    sourceCompatibility = JavaVersion.VERSION_12
    targetCompatibility = JavaVersion.VERSION_12
}

task generateLicense {
    inputs.files("$projectDir/../LICENSE", fileTree("$projectDir/../ThirdPartyLicenses"))
    outputs.file("$projectDir/src/main/resources/LICENSE")
    doLast {
        def outputFile = new File("$projectDir/src/main/resources/LICENSE")
        outputFile.delete()
        outputFile.createNewFile();
        outputFile.append( file("$projectDir/../LICENSE").text)
        fileTree("$projectDir/../ThirdPartyLicenses").forEach { file -> {
            outputFile.append("\n\n-----------\n\n")
            outputFile.append(file.text);
        }}
    }
}

compileJava.dependsOn(generateLicense)
processResources.dependsOn(generateLicense)
